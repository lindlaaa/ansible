---
# https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
# https://docs.docker.com/engine/install/ubuntu/#installation-methods
- hosts: all
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    become: true
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - ca-certificates
      - curl
      - gnupg
  
  - name: Move keyring
    become: true
    command: install -m 0755 -d /etc/apt/keyrings

  - name: Add repo using key from URL
    become: true
    ansible.builtin.deb822_repository:
      name: docker-repo
      types: deb
      uris: https://download.docker.com/linux/ubuntu
      suites: '{{ ansible_distribution_release }}'
      components: stable
      architectures: amd64
      signed_by: https://download.docker.com/linux/ubuntu/gpg

  - name: Run the equivalent of "apt-get update" as a separate step
    become: true
    apt:
      update_cache: yes

  - name: Install docker packages
    become: true
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
  - name: Install k8s pre packages
    become: true
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - gpg

  - name: Add k8s repo using key from URL
    become: true
    ansible.builtin.deb822_repository:
      name: k8s-repo
      types: deb
      uris: https://pkgs.k8s.io/core:/stable:/v1.28/deb/
      suites: /
      architectures: amd64
      signed_by: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key

  - name: Run the equivalent of "apt-get update" as a separate step
    become: true
    apt:
      update_cache: yes

  - name: Install k8s packages
    become: true
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - kubelet
      - kubeadm
      - kubectl

  - name: Add owner user to docker group
    become: true
    user:
      name: owner
      group: docker

  - name: Remove swapfile from /etc/fstab
    become: true
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    become: true
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Configure node ip
    become: true
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    become: true
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  # # - name: Copy the join command to server location
  # #   copy: src=join-command dest=/tmp/join-command.sh mode=0777

  # # - name: Join the node to cluster
  # #   command: sh /tmp/join-command.sh

  handlers:
    - name: docker status
      service: name=docker state=started